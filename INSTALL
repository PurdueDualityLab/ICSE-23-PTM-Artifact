# Install
<!-- An INSTALL file with installation instructions. These instructions should include notes illustrating a very basic usage example or a method to test the installation. This could be, for instance, on what output to expect that confirms that the code is installed and working; and the code is doing something interesting and useful.

 -->

> How to install, build, and run our software and download our data

## VM Image

To help repruduce our results, we published a virtual machine image on Zenodo at the following link: https://doi.org/10.5281/zenodo.7623128.

This Zenodo artifact contains the VM to build, install, and run our software artifacts.

The VM runs on VirtualBox 7 (as recommended by “ICSE Call For Artifact Submissions”) and uses the Open Virtualization Format 2.0.

## Download Data

To download all of our data used in our paper (including the HFTorrent dataset), you will need to use `git lfs` to clone our repository.

Please execute:

`git lfs clone https://github.com/icse2023ptm/ICSE-23-PTM-Artifact`

The HFTorrent dataset is divided into 19 parts of ~20 GB each.
Please use an extractor capable of extracting `7z` archives to unpack the dataset.

### Extract Dataset

> NOTE: These steps assume that you are running on Linux and have installed the [Homebrew](https://brew.sh) package manager

> NOTE: The software to extract the data is included within the VM artifact and does not need to be reinstalled.

Run the following commands to extract the dataset:

```shell
brew install p7zip
7z x $PATH_TO_COMPRESSED_HFTORRENT/HFTorrent.001
```

Where `$PATH_TO_COMPRESSED_HFTORRENT` is the directory where the compressed HFTorrent files are stored.
This command will extract the data to a directory called `repos` within the directory that the command was ran in.

## Build From Source

The Python code in this repository can be ran as individual scripts, or bundled into a package to be installed on your local machine.

We utlized the `poetry` build tool to create Python packages of our code.

Install `poetry` and all dependencies with:

`pip install -r requirements.txt`

Then execute (within the top level of the source code):

`poetry build`

From there, you can utilize `pip` to install a `.whl` or `.tar.gz` Python package from the newly created `dist` directory.

## Install Precompiled Package

> NOTE: We recommend installing all dependencies if you install from our packages. Please install from the `requirements.txt` file. See [Build From Source](#build-from-source) for more information.

We published precompiled packages of our tools through this repositories GitHub releases page.

You can install the `.whl` version of our project with

`pip install https://github.com/icse2023ptm/ICSE-23-PTM-Artifact/releases/download/0.1.1/icse-23-model_hub_artifact-0.1.1.tar.gz`

You can install the `.tar.gz` version of our project with

`pip install https://github.com/icse2023ptm/ICSE-23-PTM-Artifact/releases/download/0.1.1/icse-23-model_hub_artifact-0.1.1.tar.gz`
